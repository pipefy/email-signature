{"version":3,"sources":["components/FieldLabel/index.js","components/FieldText/index.js","components/FieldSelect/index.js","components/FieldWrapper/index.js","components/Text/index.js","components/Button/index.js","App.js","serviceWorker.js","index.js"],"names":["FieldLabel","styled","label","FieldText","input","attrs","props","type","FieldSelect","select","FieldWrapper","htmlFor","id","name","Text","p","fontSize","bold","color","underline","css","Button","button","GlobalStyle","createGlobalStyle","reboot","App","HEROS","pipefy","partners","cs","people","useState","role","phone","hero","signature","setSignature","copyMsg","setCopyMsg","handleChange","e","target","value","className","style","maxWidth","margin","cellSpacing","cellPadding","width","border","href","alt","src","borderLeft","dangerouslySetInnerHTML","__html","component","data-clipboard-target","onSuccess","setTimeout","window","getSelection","removeAllRanges","defaultValue","onChange","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b72f14f5.chunk.js","sourcesContent":["import styled from \"styled-components/macro\";\n\nexport const FieldLabel = styled.label`\n  margin-bottom: 0;\n  color: #293e52;\n  display: block;\n  font-size: 14px;\n  font-weight: bold;\n  line-height: 20px;\n`;\n","import styled from \"styled-components/macro\";\nimport { FieldLabel } from \"../FieldLabel\";\n\nexport const FieldText = styled.input.attrs(props => ({\n  type: \"text\",\n}))`\n  border: 1px solid #c0d0e6;\n  border-radius: 3px;\n  caret-color: #3b5bfd;\n  color: #213547;\n  font-size: 14px;\n  line-height: 1.4;\n  padding: 0 10px;\n  position: relative;\n  width: 100%;\n  height: 42px;\n  z-index: 1;\n  \n  :focus,\n  :hover {\n    border: 1px solid #3b5bfd;\n    outline: 0;\n  }\n  \n  :focus {\n    box-shadow: 0 0 0 3px rgba(59,91,253,.1);\n  }\n  \n  ${FieldLabel} > & {\n    margin-top: 5px;\n  }\n`;\n","import styled from \"styled-components/macro\";\nimport { FieldLabel } from \"../FieldLabel\";\n\nexport const FieldSelect = styled.select`\n  border: 1px solid #c0d0e6;\n  border-radius: 3px;\n  caret-color: #3b5bfd;\n  color: #213547;\n  font-size: 14px;\n  line-height: 1.4;\n  padding: 0 10px;\n  position: relative;\n  width: 100%;\n  height: 42px;\n  z-index: 1;\n  appearance: none;\n  background-color: #fff;\n  background-image: url(\"data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 448 512'%3e%3cpath d='M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z' fill='%239babbe'/%3e%3c/svg%3e\");\n  background-size: 12px;\n  background-repeat: no-repeat;\n  background-position: right 10px center;\n  \n  :focus,\n  :hover {\n    border: 1px solid #3b5bfd;\n    outline: 0;\n  }\n  \n  :focus {\n    box-shadow: 0 0 0 3px rgba(59,91,253,.1);\n  }\n  \n  ${FieldLabel} > & {\n    margin-top: 5px;\n  }\n`;\n","import React from 'react';\nimport { FieldLabel } from \"../FieldLabel\";\nimport { FieldText } from \"../FieldText\";\nimport { FieldSelect } from \"../FieldSelect\";\n\nexport const FieldWrapper = (props) => (\n  <FieldLabel htmlFor={props.id}>\n    {props.label}\n    {props.type === 'text' ? (\n      <FieldText name={props.name} {...props} />\n    ) : (\n      <FieldSelect name={props.name} {...props} />\n    )}\n\n  </FieldLabel>\n);\n","import styled from \"styled-components/macro\";\nimport { css } from 'styled-components';\n\nexport const Text = styled.p`\n  margin: 0;\n  font-size: ${({ fontSize }) => fontSize ? fontSize : \"12px\"};\n  font-weight: ${({ bold }) => bold ? \"bold\" : \"normal\"};\n  color: ${({ color }) => color ? color : 'rgb(116,130,150)'};\n  \n  ${({ underline }) => underline && css`\n    text-decoration: underline;\n  `}\n`;\n","import styled from \"styled-components/macro\";\n\nexport const Button = styled.button`\n  transition: all .2s ease-in-out;\n  background: #3b5bfd;\n  border: 0;\n  border-radius: 3px;\n  color: #fff;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  font-weight: bold;\n  padding: 11px 35px;\n  \n  :hover {\n    background-color: rgba(59,91,253,.8);\n  }\n  \n  :focus {\n    outline: none;\n    background-color: rgba(59,91,253,.8);\n    box-shadow: 0 0 0 3px rgba(59,91,253,.25);\n  }\n`;\n","import React, { useState } from 'react';\nimport { createGlobalStyle } from 'styled-components'\nimport reboot from 'styled-reboot';\nimport Clipboard from 'react-clipboard.js';\n\nimport { FieldWrapper } from \"./components/FieldWrapper\";\nimport { Text } from \"./components/Text\";\nimport { Button } from \"./components/Button\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reboot};\n\n  html,\n  body {\n      font-family: Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;\n      background-color: #f5f6f7;\n  }\n  \n  .App {\n    max-width: 800px;\n    margin: 0 auto;\n  }\n  \n  .signature-wrapper {\n    margin: 2rem 0;\n    padding: 2rem 1rem;\n    background-color: #fff;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n  }\n  \n  .signature-actions {\n    max-width: 590px;\n    margin: 1rem auto 0;\n    padding-top: 1rem;\n    border-top: 1px solid #ddd;\n  }\n  \n  .user-input {\n    margin: 2rem 0;\n    padding: 2rem 1rem;\n    background-color: #fff;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-evenly;\n    \n    label {\n      flex: 1 1 0;\n      \n      :not(:first-child) {\n        margin-left: .5rem;\n      }\n      \n      :not(:last-child) {\n        margin-right: .5rem;\n      }\n    }\n  }\n`;\n\nfunction App() {\n  const initialSignatureState = {\n    name: 'Daniel Nass',\n    role: 'SR Front-end Engineer',\n    phone: '+55 41 99926-8856',\n    hero: 'pipefy',\n  };\n\n  const HEROS = {\n    pipefy: 'Take control and improve your work with <a href=\"https://www.pipefy.com/?utm_source=email-signature&utm_medium=email&utm_campaign=UNUN01n001+honeybadger-signature+EN\" style=\"color: rgb(59,91,253);\">Pipefy</a>.',\n    partners: '​The way consultancy is done has changed. Set yourself apart. Become a <a href=\"https://www.pipefy.com/partners/?utm_source=email-signature&utm_medium=email&utm_campaign=UNUN01n001+honeybadger-signature+EN\" style=\"color: rgb(59,91,253);\">Pipefy Partner</a>.',\n    cs: '​Let us know what you like! Write a review for <a href=\"http://www.capterra.com/reviews/144848/Pipefy/new\" style=\"color: rgb(59,91,253);\">Pipefy</a>.',\n    people: '​Join our #HoneyBadger team! <a href=\"https://www.pipefy.com/careers/?utm_source=email-signature&utm_medium=email&utm_campaign=UNUN01n001+honeybadger-signature+EN\" style=\"color: rgb(59,91,253);\">Apply here</a>.',\n  };\n\n  const initialCopyMsgState = \"Copy Signature\";\n\n  const [signature, setSignature] = useState(initialSignatureState);\n  const [copyMsg, setCopyMsg] = useState(initialCopyMsgState);\n\n  const createMarkup = () => ({__html: HEROS[signature.hero]});\n\n  const handleChange = (e) => {\n    setSignature({\n      ...signature,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleCopyMsg = () => {\n    setCopyMsg(\"Copied!\");\n\n    setTimeout(() => {\n      setCopyMsg(initialCopyMsgState);\n      window.getSelection().removeAllRanges();\n    }, 3000);\n  };\n\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <div className=\"signature-wrapper\">\n        <div id=\"signature\" className=\"signature\" style={{ maxWidth: \"590px\", margin: '0 auto' }}>\n          <table cellSpacing=\"0\" cellPadding=\"0\" width=\"100%\" border=\"0\">\n            <tbody>\n              <tr>\n                <td>\n                  <table cellSpacing=\"0\" cellPadding=\"0\" width=\"100%\" border=\"0\">\n                    <tbody>\n                      <tr>\n                        <td width=\"90\">\n                          <a href=\"https://www.pipefy.com/?utm_source=email-signature&utm_medium=email&utm_campaign=UNUN01n001+honeybadger-signature+EN\">\n                            <img alt=\"Pipefy.com\"\n                             src=\"https://pipestyle.staticpipefy.com/default/images/logo-black.png\"\n                             width=\"80\"\n                            />\n                          </a>\n                        </td>\n                        <td style={{ width: '12px', borderLeft: \"2.25pt solid rgb(59,91,253)\" }}><br /></td>\n                        <td>\n                          <table cellSpacing=\"0\" cellPadding=\"0\" border=\"0\">\n                            <tbody>\n                              <tr>\n                                <td>\n                                  <Text bold color=\"#293e52\">{signature.name}</Text>\n                                </td>\n                              </tr>\n                              <tr>\n                                <td><Text color=\"#99a9be\">{signature.role}</Text></td>\n                              </tr>\n                              <tr>\n                                <td><Text>{signature.phone}</Text></td>\n                              </tr>\n                              <tr>\n                                <td><Text underline dangerouslySetInnerHTML={createMarkup()} /></td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <table cellSpacing=\"0\" cellPadding=\"0\" width=\"100%\" border=\"0\">\n                    <tbody>\n                    <tr>\n                      <td>\n                        <br />\n                      </td>\n                    </tr>\n                    </tbody>\n                  </table>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <table cellSpacing=\"0\" cellPadding=\"0\" width=\"100%\" border=\"0\">\n                    <tbody>\n                      <tr>\n                        <td>\n                          <Text color=\"#99a9be\" fontSize=\"11px\">\n                            Privileged and confidential. If this message has been received in error, notify the sender and delete it.\n                          </Text>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <div className=\"signature-actions\">\n          <Clipboard\n            component={Button}\n            data-clipboard-target=\"#signature\"\n            onSuccess={handleCopyMsg}\n          >\n            {copyMsg}\n          </Clipboard>\n        </div>\n      </div>\n\n      <div className=\"user-input\">\n        <FieldWrapper\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          label=\"Your name\"\n          defaultValue={signature.name}\n          onChange={handleChange}\n        />\n        <FieldWrapper\n          type=\"text\"\n          id=\"role\"\n          name=\"role\"\n          label=\"Job title\"\n          defaultValue={signature.role}\n          onChange={handleChange}\n        />\n        <FieldWrapper\n          type=\"text\"\n          id=\"phone\"\n          name=\"phone\"\n          label=\"Phone\"\n          defaultValue={signature.phone}\n          onChange={handleChange}\n        />\n        <FieldWrapper\n          name=\"hero\"\n          id=\"hero\"\n          label=\"Team\"\n          defaultValue={signature.hero}\n          onChange={handleChange}\n        >\n          <option value=\"pipefy\">Pipefy</option>\n          <option value=\"partners\">Partners</option>\n          <option value=\"cs\">CS</option>\n          <option value=\"people\">People</option>\n        </FieldWrapper>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}